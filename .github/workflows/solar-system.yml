name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

permissions: write-all
  # packages: write

env:
  MONGO_URI: ${{ vars.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            path: ~/.npm
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v3
          with:
            node-version: 18
        - run: npm install
        - run: npm run code-coverage
          continue-on-error: true
        - name: Upload code-coverage reports
          uses: actions/upload-artifact@v4.3.0
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      continue-on-error: true
      permissions: write-all
        # packages: write
      steps:
        - uses: actions/checkout@v4
        - uses: docker/login-action@v3.0.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner}}
            password: ${{ secrets.GITHUB_TOKEN}}
        - uses: docker/build-push-action@v5.1.0
          with:
            tags: ghcr.io/${{github.repository_owner}}/solar-system:${{github.sha}}
            push: true
            context: .
            github-token: ${{secrets.GITHUB_TOKEN}}
            
    dev-deploy:
      runs-on: ubuntu-latest
      needs: [docker]
      environment: 
        name: development
      steps:
        - uses: actions/checkout@v4
        - uses: azure/setup-kubectl@v3
          with:
            version: v1.26.0
        - uses: azure/k8s-set-context@v3.0
          with:
            method: kubeconfig
            kubeconfig: ${{secrets.KUBECONFIG}}
        # - run: kubectl version --short -o yaml
          
        - name: Fetch nginx ingress controller
          run: echo '(INGRESS_IP=kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")' >> $GITHUB_ENV
        - name: Replace tokens
          uses: cschleiden/replace-tokens@v1
          with:
            files: '["kubernetes/development/*.yaml"]'
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
          env:
            NAMESPACE: ${{vars.NAMESPACE}}
            REPLICAS: ${{ vars.REPLICAS}}
            IMAGE: ghcr.io/${{github.repository_owner}}/solar-system:${{github.sha}}
            INGRESS_IP: ${{env.INGRESS_IP}}
        - run: cat kubernetes/development/*.yaml